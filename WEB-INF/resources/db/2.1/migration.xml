<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog 
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
        

  <changeSet author="nmarwaha" id="Specimen collection status migration">
    <sql>
      update 
        catissue_specimen 
      set 
        collection_status = 'Missed Collection' 
      where 
        collection_status not in ('Collected', 'Pending')
    </sql>
  </changeSet>
  
  <changeSet author="nmarwaha" id="Update the Site's default insititute from coordinator" dbms="mysql">
    <sql>
      update 
        catissue_site site 
        join catissue_site_coordinators siteCrd on siteCrd.site_id = site.identifier
        join catissue_user usr on usr.identifier = siteCrd.user_id
        join os_departments dep on dep.identifier = usr.department_id
      set 
        site.institute_id = dep.institute_id
    </sql>
  </changeSet>
  
  <changeSet author="nmarwaha" id="Update the Site's default insititute from coordinator" dbms="oracle">
    <sql>
      merge into catissue_site site using (
        select 
          site.identifier as site_id, dep.institute_id as inst_id
        from 
          catissue_site site 
          join catissue_site_coordinators siteCrd on siteCrd.site_id = site.identifier
          join catissue_user usr on usr.identifier = siteCrd.user_id
          join os_departments dep on dep.identifier = usr.department_id
      ) t on (site.identifier = t.site_id) 
      when matched then update set site.institute_id = t.inst_id
    </sql>
  </changeSet>
  
  <changeSet author="nmarwaha" id="Update the DP's default institute ID from the PI" dbms="mysql">
    <sql>
      update 
        catissue_distribution_protocol dp 
        join catissue_user u on u.identifier = dp.principal_investigator_id
        join os_departments dep on dep.identifier = u.department_id
        join catissue_institution inst on inst.identifier = dep.institute_id
      set 
        dp.institute_id = inst.identifier 
    </sql>
  </changeSet>
  
  <changeSet author="nmarwaha" id="Update the DP's default institute ID from the PI" dbms="oracle">
    <sql>
      merge into catissue_distribution_protocol dp using (
        select 
          dp.identifier as dp_id, dep.institute_id as inst_id
        from 
          catissue_distribution_protocol dp 
          join catissue_user usr on usr.identifier = dp.principal_investigator_id
          join os_departments dep on dep.identifier = usr.department_id
      ) t on (dp.identifier = t.dp_id) 
      when matched then update set dp.institute_id = t.inst_id 
    </sql>
  </changeSet>
  
  <changeSet author="nmarwaha" id="Update the requestor ID to PI if not specified" dbms="mysql">
    <sql>
      update 
        catissue_order ordr
        join catissue_distribution_protocol dp on ordr.distribution_protocol_id = dp.identifier
        join catissue_user u on u.identifier = dp.principal_investigator_id
      set 
        ordr.requester_id = u.identifier 
      where 
        ordr.requester_id is null
    </sql>
  </changeSet>
  
  <changeSet author="nmarwaha" id="Update the requestor ID to PI if not specified" dbms="oracle">
    <sql>
      merge into catissue_order ordr using (
        select 
          ordr.identifier as order_id, usr.identifier as user_id
        from 
          catissue_order ordr
          join catissue_distribution_protocol dp on ordr.distribution_protocol_id = dp.identifier
          join catissue_user usr on usr.identifier = dp.principal_investigator_id
      ) t on (ordr.identifier = t.order_id) 
      when matched then update set ordr.requester_id = t.order_id
    </sql>
  </changeSet>
  
  <changeSet author="vratnaparkhi" id="Migrate specimen order data">
    <sql>
      insert into os_orders (
        identifier, 
        name, 
        requester_id, 
        creation_date, 
        execution_date, 
        status, 
        order_type, 
        activity_status, 
        site_id, 
        distribution_protocol_id, 
        distributor_id, 
        tracking_url, 
        comments)
      
      select 
        orders.identifier as identifier, 
        orders.name as name,
        orders.requester_id as requester_id, 
        orders.requested_date as creation_date,
        distribution.event_timestamp as execution_date,
        case
          when orders.status in ('Completed') then 'EXECUTED'
          else 'PENDING'
        end as status,
        null as order_type, 
        distribution.activity_status as activity_status, 
        distribution.to_site_id as site_id,
        distribution.distribution_protocol_id as distribution_protocol_id, 
        distribution.user_id as distributor_id,
        null as tracking_url, 
        orders.comments as comments
      from 
        catissue_order orders
        join catissue_distribution distribution on distribution.order_id=orders.identifier
        and distribution.order_id is not null;
    </sql>
    <sql>
      insert into os_order_items (
        identifier, 
        order_id, 
        quantity, 
        specimen_id, 
        status)
      
      select 
        order_item.identifier as identifier,
        order_item.order_id as order_id,
        order_item.requested_quantity as quantity,
        distributed_item.specimen_id as specimen_id,
        case
          when order_item.status like 'Distributed And Close' then 'DISTRIBUTED_AND_CLOSED'
          when order_item.status like 'Distributed' then 'DISTRIBUTED'
          when order_item.status in ('New', 'Pending - For Distribution', 'Pending - Protocol Review', 'Pending - Specimen Preparation') 
          then 'PENDING'
        end as status
      from 
        catissue_order_item order_item
        join catissue_distributed_item distributed_item on distributed_item.identifier=order_item.distributed_item_id
        join catissue_distribution distribution on distribution.identifier=distributed_item.distribution_id
        and distribution.order_id is not null;
    </sql>
  </changeSet>

</databaseChangeLog>
